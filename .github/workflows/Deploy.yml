name: Deploy CMS

on: workflow_dispatch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: imagina/basequasar-app
          token:  ${{ secrets.DEPLOY_ADMIN_THEME }}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Quasar CLI
        run: npm install -g @quasar/cli

      - name: Install npm Dependencies
        run: npm install

      - name: Remove @imagina folder
        run: rm -rf node_modules/@imagina

      - name: Initialize submodules
        run: git submodule update --init --remote

      - name: Github Credentials
        run: |
          git config --global user.name "Imagina Actions Bot"
          git config --global user.email "carlosdevia@imaginacolombia.com"
          git config --global url."https://${{ secrets.DEPLOY_ADMIN_THEME }}@github.com/".insteadOf "https://github.com/"

      - name: Prepare Staging to Release
        run: |
          git fetch --unshallow
          git checkout staging
          git submodule foreach --recursive git checkout staging
          git add .
          git commit -m "Release" || true
          npm version patch

      - name: Build as PWA
        run: quasar build -m pwa

      - name: Rename folder pwa as iadmin
        run: mv dist/pwa iadmin

      - name: Publish iadmin
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.DEPLOY_ADMIN_THEME }}
        with:
          source_file: 'iadmin'
          destination_repo: 'imagina/imaginacmsadmin-theme'
          destination_branch: 'v8.x'
          destination_folder: './'
          user_email: 'carlosdevia@imaginacolombia.com'
          user_name: 'imagina'
          commit_message: '+Release: Iadmin'

      - name: Push changes to Staging
        run: |
          git push origin staging

      - name: Merge release to master
        run: |
          git checkout master
          git merge origin/staging
          git submodule foreach --recursive git checkout master   
          git submodule foreach --recursive git merge origin/staging
          git submodule foreach --recursive git push -u origin master
          git push origin master
