name: Deploy CMS

on: workflow_dispatch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: imagina/basequasar-app
          token:  ${{ secrets.DEPLOY_ADMIN_THEME }}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Quasar CLI
        run: npm install -g @quasar/cli

      - name: Install dependencies
        run: npm install

      - name: Remove @imagina folder
        run: rm -rf node_modules/@imagina

      - name: Initialize submodules
        run: git submodule update --init --remote

      - name: Up to date master branch
        run: |
          git config --global user.name "Imagina Actions Bot"
          git config --global user.email "carlosdevia@imaginacolombia.com"
          git config --global url."https://${{ secrets.DEPLOY_ADMIN_THEME }}@github.com/".insteadOf "https://github.com/"

      - name: checkout submodules to staging
        run: |
          git fetch --unshallow
          git checkout staging
          git merge --no-ff origin/staging
          git submodule foreach --recursive git checkout staging
          git submodule foreach --recursive git pull
          git add .
          git commit -m "Release" || true
          npm version patch

      - name: Build
        run: quasar build -m pwa
 
      - name: Rename folder PWA to IADMIN
        run: mv dist/pwa iadmin

      - name: Remove old iadmin and publish iadmin folder in main repository
        run: |
          git clone https://github.com/imagina/imaginacmsadmin-theme.git tmp_repo
          cd tmp_repo
          git checkout v8.x
          rm -rf iadmin
          cp -r ../iadmin ./iadmin
          git add .
          git commit -m "+Release: Iadmin"
          git push origin githubAction
          cd ..
          rm -rf tmp_repo
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_ADMIN_THEME }}

      - name: Update Version Staging
        run: |
          git push origin staging

      - name: Verify and Create/Change branch
        run: |
          new_branch="master"
          if git show-ref --quiet refs/heads/$new_branch; then
            git checkout $new_branch
          else
            git checkout -b $new_branch
          fi

      - name: submodules Up to date master with staging
        run: |
          git checkout .
          git merge --no-ff origin/staging
          git submodule foreach --recursive git checkout master   
          git submodule foreach --recursive git merge --no-ff origin/staging
          git submodule foreach --recursive git push -u origin master
          git config pull.rebase false
          git pull origin master
          git commit -am "Release" || true
          git push origin master
