name: Update Current Branch

on: workflow_dispatch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: imagina/basequasar-app
          token:  ${{ secrets.DEPLOY_ADMIN_THEME }}

      - name: Initialize submodules
        run: git submodule update --init --remote

      - name: Github Credentials
        run: |
          git config --global user.name "Imagina Actions Bot"
          git config --global user.email "carlosdevia@imaginacolombia.com"
          git config --global url."https://${{ secrets.DEPLOY_ADMIN_THEME }}@github.com/".insteadOf "https://github.com/"

      - name: Set Branch
        id: set_branch
        run: |
          # Get the current branch
          current_branch=$(git rev-parse --abbrev-ref HEAD)
          branch="branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> "$GITHUB_ENV"
          echo "$current_branch -> $branch"
          echo "current_branch=$current_branch" >> "$GITHUB_ENV"
          
          # Set the branch to merge based on the current branch
          if [ "$current_branch" == "master" ]; then
            branch_to_merge="staging"
          elif [ "$current_branch" == "staging" ]; then
            branch_to_merge="dev"
          else
            # If it's neither master nor staging, you can set a default value or handle it as needed
            branch_to_merge="default_branch"
          fi
          
          echo "branch_to_merge=$branch_to_merge" >> "$GITHUB_ENV"
          echo "Branch: $current_branch -> $branch_to_merge"

      - name: Update Version
        if: ${{ github.ref }} == "refs/heads/staging"
        run: |
          git checkout $branch_to_merge
          git merge origin/$branch_to_merge
          git submodule foreach --recursive git checkout $branch_to_merge
          git submodule foreach --recursive git merge origin/$branch_to_merge
          git add .
          git commit -m "Realease"
          npm version patch
          git push origin $branch_to_merge

      - name: Merge release to input branch
        run: |
          git checkout $current_branch
          git merge origin/$branch_to_merge
          git submodule foreach --recursive git checkout $current_branch   
          git submodule foreach --recursive git merge origin/$branch_to_merge
          git submodule foreach --recursive git push -u origin $current_branch
          git push origin $current_branch
